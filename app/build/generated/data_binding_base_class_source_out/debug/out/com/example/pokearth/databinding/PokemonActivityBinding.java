// Generated by view binder compiler. Do not edit!
package com.example.pokearth.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.pokearth.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PokemonActivityBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView pokemonHeight;

  @NonNull
  public final ImageView pokemonImage;

  @NonNull
  public final TextView pokemonNameView2;

  @NonNull
  public final TextView pokemonType;

  @NonNull
  public final Button returnButton;

  private PokemonActivityBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView pokemonHeight, @NonNull ImageView pokemonImage,
      @NonNull TextView pokemonNameView2, @NonNull TextView pokemonType,
      @NonNull Button returnButton) {
    this.rootView = rootView;
    this.pokemonHeight = pokemonHeight;
    this.pokemonImage = pokemonImage;
    this.pokemonNameView2 = pokemonNameView2;
    this.pokemonType = pokemonType;
    this.returnButton = returnButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PokemonActivityBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PokemonActivityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.pokemon_activity, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PokemonActivityBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.pokemonHeight;
      TextView pokemonHeight = rootView.findViewById(id);
      if (pokemonHeight == null) {
        break missingId;
      }

      id = R.id.pokemonImage;
      ImageView pokemonImage = rootView.findViewById(id);
      if (pokemonImage == null) {
        break missingId;
      }

      id = R.id.pokemonNameView2;
      TextView pokemonNameView2 = rootView.findViewById(id);
      if (pokemonNameView2 == null) {
        break missingId;
      }

      id = R.id.pokemonType;
      TextView pokemonType = rootView.findViewById(id);
      if (pokemonType == null) {
        break missingId;
      }

      id = R.id.returnButton;
      Button returnButton = rootView.findViewById(id);
      if (returnButton == null) {
        break missingId;
      }

      return new PokemonActivityBinding((ConstraintLayout) rootView, pokemonHeight, pokemonImage,
          pokemonNameView2, pokemonType, returnButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
