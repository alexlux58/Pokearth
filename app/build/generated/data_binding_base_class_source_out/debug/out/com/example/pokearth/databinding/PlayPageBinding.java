// Generated by view binder compiler. Do not edit!
package com.example.pokearth.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.pokearth.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PlayPageBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button biomeSelectButton;

  @NonNull
  public final Button fightButton;

  @NonNull
  public final FloatingActionButton floatingActionButton;

  @NonNull
  public final Button pokemonSelectButton;

  private PlayPageBinding(@NonNull ConstraintLayout rootView, @NonNull Button biomeSelectButton,
      @NonNull Button fightButton, @NonNull FloatingActionButton floatingActionButton,
      @NonNull Button pokemonSelectButton) {
    this.rootView = rootView;
    this.biomeSelectButton = biomeSelectButton;
    this.fightButton = fightButton;
    this.floatingActionButton = floatingActionButton;
    this.pokemonSelectButton = pokemonSelectButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PlayPageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PlayPageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.play_page, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PlayPageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.biome_select_button;
      Button biomeSelectButton = rootView.findViewById(id);
      if (biomeSelectButton == null) {
        break missingId;
      }

      id = R.id.fight_button;
      Button fightButton = rootView.findViewById(id);
      if (fightButton == null) {
        break missingId;
      }

      id = R.id.floatingActionButton;
      FloatingActionButton floatingActionButton = rootView.findViewById(id);
      if (floatingActionButton == null) {
        break missingId;
      }

      id = R.id.pokemon_select_button;
      Button pokemonSelectButton = rootView.findViewById(id);
      if (pokemonSelectButton == null) {
        break missingId;
      }

      return new PlayPageBinding((ConstraintLayout) rootView, biomeSelectButton, fightButton,
          floatingActionButton, pokemonSelectButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
